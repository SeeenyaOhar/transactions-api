openapi: 3.0.3
info:
  title: Transactions API - OpenAPI 3.0
  version: 1.0.0
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: user
    description: User operations
  - name: transaction
    description: Access to transactions
paths:
  /api/transaction:
    get:
      summary: Get all transactions of a user
    post:
      summary: Create a new transaction
  /api/user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      description: Modify user
      tags: 
        - user
      requestBody:
        description: User to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
          '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
              application/xml:
                schema:
                  $ref: '#/components/schemas/User'
          '400':
            description: There might be some problem with fields specified(e.g. incorrect email address)
  /api/user/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      requestBody:
        $ref: "#/components/requestBodies/Credentials"
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
          
  
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: John
        surname:
          type: string
          example: Wick
        email:
          type: string
          example: john@email.com
        password:
          type: string
          format: password
    Transaction:
      required:
        - date
        - category
        - tag
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        date:
          type: string
          format: date-time
        category:
          type: string
        tag:
          type: string
      xml:
        name: transaction
  requestBodies:
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
        application/xml:
          schema:
            $ref: '#/components/schemas/User'
    Transaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Transaction'
        application/xml:
          schema:
            $ref: '#/components/schemas/Transaction'
    Credentials:
      content: 
        application/json:
          schema: 
            type: object
            properties:
              email:
                type: string
                format: email
                example: "example@gmail.com"
              password:
                type: string
                format: password
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header